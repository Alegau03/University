Esercizio 3.6 (Mediano di due array). 
Progettare un algoritmo di complessità O(log n)  che dati in input due vettori A,B di n interi ordinati in senso non decrescente 
restituisca il mediano dei 2n elementi.
Nota: essendo il numero totale di elementi pari, il mediano sar`a la media tra
i due valori centrali ottenuti disponendo tutti gli elementi in modo ordinato

def Mediano(A, B):

    n = len(A)
    m = len(B)
    imin, imax = 0, n
    half_len = (n + m + 1) // 2

    while imin <= imax:
        i = (imin + imax) // 2
        j = half_len - i
        
        if i < n and A[i] < B[j - 1]:
            # i è troppo piccolo, deve essere aumentato
            imin = i + 1
        elif i > 0 and A[i - 1] > B[j]:
            # i è troppo grande, deve essere diminuito
            imax = i - 1
        else:
            # i è perfetto
            if i == 0: 
                max_of_left = B[j - 1]
            elif j == 0: 
                max_of_left = A[i - 1]
            else: 
                max_of_left = max(A[i - 1], B[j - 1])

           
            if i == n: 
                min_of_right = B[j]
            elif j == m: 
                min_of_right = A[i]
            else: 
                min_of_right = min(A[i], B[j])

            return (max_of_left + min_of_right) / 2  

