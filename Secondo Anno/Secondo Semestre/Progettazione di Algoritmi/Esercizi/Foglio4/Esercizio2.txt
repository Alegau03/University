Esercizio 2 (I. Salvo). 
Fornire un algoritmo in pseudo-codice che, dato un grafo non diretto G = (V;E) e due nodi u e v, 
restituisce tutti i nodi che hanno la stessa distanza da u e v in tempo O(n+m)


Def Esercizio2(G,u,v):

    equidistanti=[]

    Dist1= BFSDist(G,u)
    Dist2= BFSDist(G,v)

    for x in V(G):
        if Dis1[x]==Dist2[x] and x!=u and x!=v:  // Ovviamente Dist1[u] = Dist2[v]=1 per√≤ non devo contarli
            equidistanti.append(x)



Def BFSDist(G,n):

    Dist=[-1,..,-1]
    Dist[n]=0
    Coda Q=[n]

    While Q!=0:
        current=Q.pop(0)
        for v in current.adiancenti():
            if Dist[v]==-1:
                Dist[v]=Dist[current]+1
                Q.enqueue(v)    
    Return Dist  // O(n+m)  

